// Mocks generated by Mockito 5.3.2 from annotations
// in nytfeed/test/usecases/load_and_cache_articles_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:nytfeed/data/nyt_feed_repo.dart' as _i3;
import 'package:nytfeed/data/nyt_feed_storage_repo.dart' as _i6;
import 'package:nytfeed/model/article.dart' as _i5;
import 'package:nytfeed/model/list_part.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeListPart_0<T> extends _i1.SmartFake implements _i2.ListPart<T> {
  _FakeListPart_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NytFeedRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNytFeedRepo extends _i1.Mock implements _i3.NytFeedRepo {
  @override
  _i4.Future<_i2.ListPart<_i5.Article>> getArticles(
    int? offset,
    int? limit,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getArticles,
          [
            offset,
            limit,
          ],
        ),
        returnValue: _i4.Future<_i2.ListPart<_i5.Article>>.value(
            _FakeListPart_0<_i5.Article>(
          this,
          Invocation.method(
            #getArticles,
            [
              offset,
              limit,
            ],
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.ListPart<_i5.Article>>.value(
            _FakeListPart_0<_i5.Article>(
          this,
          Invocation.method(
            #getArticles,
            [
              offset,
              limit,
            ],
          ),
        )),
      ) as _i4.Future<_i2.ListPart<_i5.Article>>);
}

/// A class which mocks [NytFeedStorageRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNytFeedStorageRepo extends _i1.Mock
    implements _i6.NytFeedStorageRepo {
  @override
  _i4.Future<_i2.ListPart<_i5.Article>> getArticles(
    int? offset,
    int? limit,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getArticles,
          [
            offset,
            limit,
          ],
        ),
        returnValue: _i4.Future<_i2.ListPart<_i5.Article>>.value(
            _FakeListPart_0<_i5.Article>(
          this,
          Invocation.method(
            #getArticles,
            [
              offset,
              limit,
            ],
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.ListPart<_i5.Article>>.value(
            _FakeListPart_0<_i5.Article>(
          this,
          Invocation.method(
            #getArticles,
            [
              offset,
              limit,
            ],
          ),
        )),
      ) as _i4.Future<_i2.ListPart<_i5.Article>>);
  @override
  _i4.Future<void> storeArticles(Iterable<_i5.Article>? articles) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeArticles,
          [articles],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
